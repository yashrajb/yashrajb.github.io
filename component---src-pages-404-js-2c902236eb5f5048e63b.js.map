{"version":3,"file":"component---src-pages-404-js-2c902236eb5f5048e63b.js","mappings":"qJA+BA,IA9ByBA,IACvB,MAAM,EAACC,EAAU,EAACC,IAAgBC,EAAAA,EAAAA,WAAS,GA0B3C,OAzBAC,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAW,IAAIC,sBACnBC,IAAc,IAAZC,GAAMD,EACFC,EAAMC,iBACRP,GAAa,IACbF,aAAG,EAAHA,EAAKU,UAAWL,EAASM,UAAUX,EAAIU,SACzC,GAEF,CACEE,WAAY,QACZC,UAAW,KAQf,OAJIb,EAAIU,SACNL,EAASS,QAAQd,EAAIU,SAGhB,KACDV,EAAIU,SACNL,EAASM,UAAUX,EAAIU,QACzB,CACD,GACA,IAEIT,CAAS,C,+CCxBlB,IAAeM,IAA8C,IAA7C,IAAEQ,EAAG,SAAEC,GAAW,KAASC,GAAYV,EACrD,MAAMP,GAAMkB,EAAAA,EAAAA,UACNjB,GAAYkB,EAAAA,EAAAA,GAAgBnB,GAClC,OACEoB,EAAAA,cAAA,OAAKpB,IAAKA,GACPC,EACCmB,EAAAA,cAAA,MAAAC,OAAAC,OAAA,CAAKC,UAAW,YAAaR,IAAKA,GAASE,IAE3CG,EAAAA,cAAA,UAIP,C,sGCED,MAdqBI,IACnBJ,EAAAA,cAAA,OAAKG,UCCmB,oCDAtBH,EAAAA,cAAA,OAAKL,IAAI,aACTK,EAAAA,cAAA,UAAI,iBACJA,EAAAA,cAAA,SAAG,wDACHA,EAAAA,cAAA,SAAG,2EAGHA,EAAAA,cAACK,EAAAA,GAAI,CAACC,GAAG,IAAIH,UCRC,4BDQuB,Q","sources":["webpack://yashraj-basan-portfolio/./src/hooks/useIsInViewPort.js","webpack://yashraj-basan-portfolio/./src/molecules/Image/index.js","webpack://yashraj-basan-portfolio/./src/pages/404.js","webpack://yashraj-basan-portfolio/./src/styles/404.module.scss"],"sourcesContent":["import React, { useState, useEffect } from \"react\"\nconst useIsInViewPort = (ref) => {\n  const [isVisible, setIsVisible] = useState(false)\n  useEffect(() => {\n    const observer = new IntersectionObserver(\n      ([entry]) => {\n        if (entry.isIntersecting) {\n          setIsVisible(true)\n          ref?.current && observer.unobserve(ref.current)\n        }\n      },\n      {\n        rootMargin: \"100px\",\n        threshold: 0.1,\n      }\n    )\n\n    if (ref.current) {\n      observer.observe(ref.current)\n    }\n\n    return () => {\n      if (ref.current) {\n        observer.unobserve(ref.current)\n      }\n    }\n  }, [])\n\n  return isVisible\n}\n\nexport default useIsInViewPort\n","import React, { useRef } from \"react\"\nimport useIsInViewPort from \"@app/hooks/useIsInViewPort\"\nimport { Image } from \"react-bootstrap\"\n\nexport default ({ src, viewPort = true, ...otherProps }) => {\n  const ref = useRef()\n  const isVisible = useIsInViewPort(ref)\n  return (\n    <div ref={ref}>\n      {isVisible ? (\n        <img className={\"img-fluid\"} src={src} {...otherProps} />\n      ) : (\n        <p></p>\n      )}\n    </div>\n  )\n}\n","import React from \"react\"\nimport * as styles from \"@app/styles/404.module\"\nimport Image from \"@app/molecules/Image\"\nimport { Link } from \"gatsby\"\nconst NotFoundPage = () => (\n  <div className={styles.notFoundPage}>\n    <img src=\"/404.png\" />\n    <h1>404 NOT FOUND</h1>\n    <p>We're Sorry, but it seems you've taken a wrong turn.</p>\n    <p>\n      Don't worry, it happens to the best of us. Let's get you back on track.\n    </p>\n    <Link to=\"/\" className={styles.link}>\n      Home\n    </Link>\n  </div>\n)\n\nexport default NotFoundPage\n","// extracted by mini-css-extract-plugin\nexport var buttonbackground = \"#ff8e3c\";\nexport var fontColor = \"#000\";\nexport var lg = \"75em\";\nexport var link = \"_404-module--link--39551\";\nexport var md = \"62em\";\nexport var notFoundPage = \"_404-module--notFoundPage--237fc\";\nexport var primarybackground = \"#eff0f3\";\nexport var primarycolor = \"#fff\";\nexport var secondarybackground = \"#fff\";\nexport var sm = \"48em\";\nexport var xl = \"88em\";\nexport var xs = \"36em\";"],"names":["ref","isVisible","setIsVisible","useState","useEffect","observer","IntersectionObserver","_ref","entry","isIntersecting","current","unobserve","rootMargin","threshold","observe","src","viewPort","otherProps","useRef","useIsInViewPort","React","Object","assign","className","NotFoundPage","Link","to"],"sourceRoot":""}